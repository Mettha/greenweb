.App {
  max-width: 100%;
  margin: 0 auto;
  font-family: Verdana;
  background-color: #f1eeeb;
  text-align: center;
  line-height: 2;
}

/*------Headings & Paragraphs------*/
h1{
  font-family: Verdana, Geneva, Tahoma, sans-serif;
  font-weight: normal;
  color: #313131;
}

h2{
  font-family: Verdana, Geneva, Tahoma, sans-serif;
  font-weight: normal;
  color: #313131;
}

h4{
  font-family: Verdana, Geneva, Tahoma, sans-serif;
  color: #313131;
}



/*------Navigationbaren------*/
/*-----Obs space-between er udnødvendig-----*/
.globalnavigation{
  display: flex;
  justify-content: space-between; 
  justify-content: space-around;
  flex-wrap: wrap;
  padding-top: 20px;
} 

.navpunkt{
  color:#313131;
  text-decoration: none;
  font-family: Verdana, Geneva, Tahoma, sans-serif;
  font-size: 15pt;
  padding-top: 20px;
}

.navlogo{
  position: relative;
  top: -30px;
}

/*--------------------------------------------------Om Os siden------------------------------*/
.container{
  max-width: 100%;
  height: auto;
  margin-top: 5%;
  align-items: center;
  padding-bottom: 20%;
}

/*--------Om os banner------------*/
.omOsbanner{
  text-align: center;
  margin-bottom: 10%;
  padding: 0 15% 0 15%;
}

.omOsP{
  text-align: left;
  margin: 5% 0 5% 0;
}

.omOsCitat{
  padding: 0 25.5% 0 25.3%;
  line-height: 35pt;
  color: #313131;
  font-style: italic;
}

/*-------Værdier--------*/

.værdier{
  display: flex;
  justify-content: space-around;
  color: #F0EBE8;
  background-color: #69897A;
  padding: 5% 5% 20% 5%;
  position: relative;
}

.værdier .waves{
  position: absolute;
  bottom: 0;
}

.V-søjle{
  max-width: 30%;
  text-align: center;
}

.V-søjle h2{
  color: #F0EBE8;
}

.V-søjle p{
  color: #F0EBE8;
}

.værdierIcon{
  font-size: 80px;
  margin: 10% 0 10% 0;
}

/*---------Team sectionen-----*/

.teamOverskrift{
  font-weight: normal;
  text-align: center;
  padding: 5%;
}

.row{
  display: flex;
  justify-content: space-evenly;
  margin: auto;
  flex-direction: row;
}

.col{
  position: relative;
}

.pic{
  filter: grayscale(100%);
  height: 30vh;
  width: 20vh;
}
/* The full form of VH is viewport height. 
It works like the percentage unit as well. 
Specifying 10vh is equivalent to occupying 10% of entire visible screen height. */

.picOver{
  height: 30vh;
  width: 20vh;
}

.col:hover .layer{
  max-height: 500px;
}

.layer{
  position: absolute;
  top: 0;
  max-height: 0;
  overflow: hidden;
  transition: 1s;
  border-bottom: 2px solid #69897A;
  width: 100%;
}
/* The overflow property specifies what happens if content overflows an element's box */

.info{
  width: 120%;
  padding: 15px 2px 2px 2px;
  box-sizing: border-box;
  text-align: center;
  background-color: #69897A;
  color: #ffff;
  position: absolute;
  transform: translateX(-10%); /* placering af grøn boks -> kunne have brug left og right i samspil med position absolute */
  border-radius: 5%;
}
/* position: absolute = is positioned relative to the nearest positioned ancestor 
position: relative = is positioned relative to its normal position.

position: fixed = is positioned relative to the viewport = stays in the same place even if the page is scrolled
position: sticky = is positioned based on the user's scroll position. 
A sticky element toggles between relative and fixed, depending on the scroll position. It is positioned relative until a given offset position is met in the viewport - then it "sticks" in place (like position:fixed).*/

.teamh2{
  font-size: 18pt;
}

.teamP{
margin: 6px 2px;
}

.icons .fa-brands{
  font-size: 30px;
  padding: 10px 8px;
  cursor: pointer;
}

.fa-facebook {
  color: #4267B2;
}

.linkedin{
  color: #0A66C2;
}

.icons{
  max-height: 0;
  overflow: hidden;
  transition: 0.5s;
}

.col:hover .icons{
  max-height: 100%;
}

/* ---404 side----*/
.btn-home{
  width: 80px;
  margin: auto;
  background-color: #DEC271;
  border: none;
  color: #F0EBE8;
  padding: 5px 5px;
  border-radius: 5pt;
}

.boat{
  font-size: 80px;
  color: #313131;
  line-height: 1.2;
}

.wave{
  width: 200px;
}

.btn-home:hover{
  background-color: #2C6246;
  transition: cubic-bezier(0.895, 0.03, 0.685, 0.22);
}
/* The cubic-bezier() function defines a Cubic Bezier curve.
A Cubic Bezier curve is defined by four points P0, P1, P2, and P3. 
P0 and P3 are the start and the end of the curve and, in CSS these points are fixed as 
the coordinates are ratios. P0 is (0, 0) and represents the initial time and the initial state, 
P3 is (1, 1) and represents the final time and the final state.
The cubic-bezier() function can be used with the animation-timing-function property and the 
transition-timing-function property. 
OBS gør ingen forskel her*/

/*---------------------------------------------------Forsiden-----------------------------*/
/*-------videobg-----*/
.videobg{
  width: 100%;
  height: 100%;
  object-fit: cover;
  padding-top: 8%;
}

.content{
  position: absolute;
  top: 30%;
  height: 50%;
  width: 100%;
}


/*------flipbøger section---------------------------*/
/*---------div for bøgerne ----*/
.flip-bøger-section{
  margin: 0;
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content:center;
  background-color:#69897A;
  padding: 30% 0 50% 0;
  border-top-right-radius: 30%;
  border-bottom-left-radius: 30%;

}

.sec1, .sec2{
  display: flex;
  justify-content: center;
  flex-direction: row;
  justify-content: space-evenly;
}

.sec2{
  padding-top: 10%;
}

.flip-book-overskrift{
  color: #F0EBE8;
  text-align: center;
  margin: 5% 25% 5% 25% ;
}

.bog1, .bog2, .bog3, .bog4{
  display: flex;
  text-align: center;
  flex-direction: column;
  justify-content: space-between;
  color: #F0EBE8;
}

h3{
  padding-bottom: 5%;
}


.kortbillede{
width: 88%;
height: 100%;
padding:  0% 8% 0% 8%;
background-color: #F0EBE8;
}

iframe { width: 100%;
height: 100%;
background-color: #F0EBE8;
}

.book{
  display: flex;
}

.book input{
  display: none;
}

#cover1, #cover2, #cover3, #cover4{
  width: 250px;
  height: 425px;
  background-color: #F0EBE8;
}


.flip-book{
  width: 250px;
  height: 400px;
  position: relative;
  perspective: 1500px;
}
/* The perspective CSS property determines the distance between 
the z=0 plane and the user in order to give a 3D-positioned element some perspective.*/

.flip{
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  transform-origin: left;
  transform-style: preserve-3d;
  transform: rotateY(0deg);
  transition: .5s;
  color: #000;
  background-color: #F0EBE8;
  padding: 5%;
}
/*   transform-origin: left; = roterer om venste som center point
 preserve-3d = Indicates that the children of the element should be positioned in the 3D-space.
  transform: rotateY(0deg); = roterer 0 grader om y akse*/

.paragraph{
  font-size: 12pt;
  line-height: 16pt;
  text-align: left;
}

.font{
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: #fff;
  box-sizing: border-box;
  padding: 0 13px;
  box-shadow: inset 20px 0 50px rgba(0,0,0,0.5) 0 2px 5px rgba(0,0,0,.5);
}
/* The box-sizing CSS property sets how the total width and height of an element is calculated.
=> tells the browser to account for any border and padding in the values you specify for an element's 
width and height. If you set an element's width to 100 pixels, that 100 pixels will include any border 
or padding you added, and the content box will shrink to absorb that extra width. 
This typically makes it much easier to size elements.*/

.back{
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 99;
  transform: rotateY(180deg);
  backface-visibility: hidden;
  background-color: #000;
}
/*   z-index: 99; = sikker på det ligger forrest/ tætteste på seeren 
The backface-visibility CSS property sets whether the back face of 
an element is visible when turned towards the user. (ved et 3d element)*/

.next-btn, .back-btn{
  position: absolute;
  bottom: 13px;
  right: 13px;
  cursor: pointer;
  color: #000;
  font-weight: bold;
}

.next-btn:hover, .back-btn:hover{
  color: #DEC271;
}

#p1{
  z-index: 5;
}

#p2{
  z-index: 4;
}

#p3{
  z-index: 3;
}

#p4{
  z-index: 2;
}

#p5{
  z-index: 1;
}


/*-----bogen om farver-------*/
#a1:checked ~ .flip-book #p1{
  transform: rotateY(-180deg);
  z-index: 1;
}

#a2:checked ~ .flip-book #p2{
  transform: rotateY(-180deg);
  z-index: 2;
}

#a3:checked ~ .flip-book #p3{
  transform: rotateY(-180deg);
  z-index: 3;
}

#a4:checked ~ .flip-book #p4{
  transform: rotateY(-180deg);
  z-index: 4;
}

#a5:checked ~ .flip-book #p5{
  transform: rotateY(-180deg);
  z-index: 5;
}


/*-------bogen om typografi---------*/
#c1:checked ~ .flip-book #p1{
  transform: rotateY(-180deg);
  z-index: 1;
}

#c2:checked ~ .flip-book #p2{
  transform: rotateY(-180deg);
  z-index: 2;
}

#c3:checked ~ .flip-book #p3{
  transform: rotateY(-180deg);
  z-index: 3;
}

#c4:checked ~ .flip-book #p4{
  transform: rotateY(-180deg);
  z-index: 4;
}

#c5:checked ~ .flip-book #p5{
  transform: rotateY(-180deg);
  z-index: 5;
}

/*-------bogen om filtyper---------*/

#b1:checked ~ .flip-book #p1{
  transform: rotateY(-180deg);
  z-index: 1;
}

#b2:checked ~ .flip-book #p2{
  transform: rotateY(-180deg);
  z-index: 2;
}

#b3:checked ~ .flip-book #p3{
  transform: rotateY(-180deg);
  z-index: 3;
}

#b4:checked ~ .flip-book #p4{
  transform: rotateY(-180deg);
  z-index: 4;
}

#b5:checked ~ .flip-book #p5{
  transform: rotateY(-180deg);
  z-index: 5;
}


/*-----bogen om animationer-------*/

#d1:checked ~ .flip-book #p1{
  transform: rotateY(-180deg);
  z-index: 1;
}

#d2:checked ~ .flip-book #p2{
  transform: rotateY(-180deg);
  z-index: 2;
}

#d3:checked ~ .flip-book #p3{
  transform: rotateY(-180deg);
  z-index: 3;
}

#d4:checked ~ .flip-book #p4{
  transform: rotateY(-180deg);
  z-index: 4;
}

#d5:checked ~ .flip-book #p5{
  transform: rotateY(-180deg);
  z-index: 5;
}


/*----Book møde med os--------------------*/
.f-bookmøde{
  padding: 10% 15% 0 15%;
  color: #313131;
  text-align: left;
}
.btn-bookmøde{
  background-color: #DEC271;
  border: none;
  color: #F0EBE8;
  margin-top: 2%;
  padding: 10px 20px;
  border-radius: 5pt;
}
.btn-bookmøde:hover{
  background-color: #2C6246;
  transition: cubic-bezier(0.895, 0.03, 0.685, 0.22);
}


/*------Booking sider------*/

/* ---Formular formattering ----*/
.formularlayout{
  display: flex;
  flex-direction: column;
  padding-top: 10px;
  padding-bottom: 20px;
}

.formularlayout >label{
padding: 10px;
text-align: right;
margin-right: 550px;
}

.formularlayout >label #beskedfelt{
  padding-bottom: 60px;
  width: 200px;
}

.formularlayout >label >input{
  margin-left: 10px;
  padding: 10px;
  width: 200px;
}

.formularlayout >button{
  width: 80px;
  margin: auto;
  background-color: #DEC271;
  border: none;
  color: #F0EBE8;
  padding: 5px 20px;
  border-radius: 5pt;
}

.formularlayout >button:hover{
  background-color: #2C6246;
  transition: cubic-bezier(0.895, 0.03, 0.685, 0.22);
}
.btn-delete{
  width: 80px;
  margin: auto;
  background-color: #DEC271;
  border: none;
  color: #F0EBE8;
  padding: 5px 5px;
  border-radius: 5pt;
}

.btn-delete:hover{
  background-color: #2C6246;
  transition: cubic-bezier(0.895, 0.03, 0.685, 0.22);
}

.btn-opret{
  width: 80px;
  margin: auto;
  background-color: #DEC271;
  border: none;
  color: #F0EBE8;
  padding: 5px 10px;
  border-radius: 5pt;
}

.btn-opret:hover{
  background-color: #2C6246;
  transition: cubic-bezier(0.895, 0.03, 0.685, 0.22);
}

/*------Bekræftigelse------*/

.smiley{
  width: 100px;
}

/* ---Kort formattering ----*/

.kortraekke{
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
}

.bookingskort {
  cursor: pointer;
}

.kort{
  position: relative;
  width: 240px;
  margin: 10px;
  box-shadow: 2px 2px 6px 0px rgba(0, 0, 0, 0.3);
}

.kort .tekst {
  text-align: center;
  padding: 0 10px 50px;
}

.kort h3 {
  text-align: center;
  margin-bottom: 5px;
}

.kontakt-ikoner{
display: flex;
flex-direction: row;
justify-content:center;
justify-content: space-evenly;
padding: 6%;

}

/*-----------------------------------------------------------Kontakt siden----------------------------*/
/*---------kontakt text section------*/
.kontaktside-container{
  text-align: center;
  padding: 5% 20% 5% 20%;

}
.kontakt-spg{
  margin: 4%;
}
/*-----Kontakt links--------*/
.KontakLinks{
  display: flex;
  flex-direction: row;
  justify-content: center;
  justify-content: space-between;

}
.kontakSide-Icon{
  font-size: 60px;
  margin-bottom: 20%;
  color: #313131;
}
.k-søjle{
  margin: 10% 0 10% 0;
}

.værdierP{
  color: #313131;
}


/*------Footer------*/
.footer{
  height: auto;
  margin-top: 2%;
  padding: 20% 0 5% 0;
  position: relative;
  color: #F0EBE8;
  background-size: cover;
  background-image: url(../src/images/nyFooterBg.jpg);

}


.footerrubrikker{
  display: flex;
  justify-content: space-around;
  flex-wrap: wrap;
  line-height: 5pt;
}
/* The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap 
onto multiple lines. If wrapping is allowed, it sets the direction that lines are stacked.*/

.kontaktFooter{
  line-height: 20pt;
  flex-direction: column;
  display: flex;
  text-align: left;
}

.footerGenvej{
  line-height: 20pt;
  flex-direction: column;
  display: flex;
  text-align: left;

}
.footerlink{
  text-decoration: none;
  color: #F0EBE8;
}

.footerlink:hover{
  text-decoration: none;
  color: #DEC271 ;
  
}

.logoer{
  display: flex;
  flex-direction: column;
  align-items: center;
}
.footerlogo{
  width: 16rem;
}
.manifest{
  height: 8rem;
  width: 8rem;
  padding-bottom: 20%;
}
/* 8rem = 128px
Rem (short for “root-em”) units dictate an element's font size relative to the size of the root element. 
By default, most browsers use a font size value of 16px. So, if the root element is 16px, 
an element with the value 1rem will also equal 16px.*/ 

.someIcons-F{
 margin-top: 10%;
}

.lin-icon-F:hover{
 color: #0A66C2;
}

.fb-icon-F:hover{
  color: #4267B2;
}

.iconeLink-F{
  color: #F0EBE8;
  margin: 5%;
}

.brandsIcons{
  display: flex;
  flex-direction: row ;
  font-size: 50px;
  text-align: left;
}